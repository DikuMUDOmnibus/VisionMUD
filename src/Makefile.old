# Generated automatically from Makefile.in by configure.
# CircleMUD 3.0 Makefile.in - Makefile template used by 'configure'
# Modifications by Yilard/VisionMUD

# C compiler to use
CC = gcc

# Path to cxref utility
CXREF = cxref

# Any special flags you want to pass to the compiler
MYFLAGS = -O3

#flags for profiling (see hacker.doc for more information)
PROFILE = 

##############################################################################
# Do Not Modify Anything Below This Line (unless you know what you're doing) #
##############################################################################

# I have removed -g flag from CFLAGS (YIL)
CFLAGS = $(MYFLAGS) $(PROFILE)

OBJFILES = comm.o act.comm.o act.create.o act.informative.o act.movement.o \
	act.item.o act.offensive.o act.other.o act.social.o act.wizard.o \
	ban.o boards.o castle.o class.o clan.o config.o constants.o db.o \
	fight.o graph.o guild.o handler.o house.o interpreter.o limits.o \
	magic.o mail.o mobact.o mobcmd.o mobprog.o modify.o objsave.o olc.o \
	prgrun.o random.o shop.o spec_assign.o spec_grave.o spec_procs.o \
	spell_parser.o spells.o teleport.o trains.o utils.o weather.o wizlist.o \
	redit.o oedit.o zedit.o medit.o sedit.o gedit.o
	  
	

default: .accepted
	$(MAKE) ../bin/circle

.accepted:
	@./licheck more

utils: .accepted
	$(MAKE) ../bin/autowiz
	$(MAKE) ../bin/delobjs
	$(MAKE) ../bin/listrent
	$(MAKE) ../bin/mailindex
	$(MAKE) ../bin/mudpasswd
	$(MAKE) ../bin/play2to3
	$(MAKE) ../bin/plrconv
	$(MAKE) ../bin/purgeplay
	$(MAKE) ../bin/shopconv
	$(MAKE) ../bin/showplay
	$(MAKE) ../bin/sign
	$(MAKE) ../bin/split
	$(MAKE) ../bin/wld2html

all: .accepted
	$(MAKE) ../bin/circle
	$(MAKE) utils

circle:
	$(MAKE) ../bin/circle
autowiz:
	$(MAKE) ../bin/autowiz
delobjs:
	$(MAKE) ../bin/delobjs
listrent:
	$(MAKE) ../bin/listrent
mailindex:
	$(MAKE) ../bin/mailindex
mudpasswd:
	$(MAKE) ../bin/mudpasswd
play2to3:
	$(MAKE) ../bin/play2to3
plrconv:
	$(MAKE) ../bin/plrconv
purgeplay:
	$(MAKE) ../bin/purgeplay
shopconv:
	$(MAKE) ../bin/shopconv
showplay:
	$(MAKE) ../bin/showplay
sign:
	$(MAKE) ../bin/sign
split:
	$(MAKE) ../bin/split
wld2html:
	$(MAKE) ../bin/wld2html


../bin/autowiz: util/autowiz.c conf.h sysdep.h structs.h utils.h db.h
	$(CC) $(CFLAGS) -o ../bin/autowiz util/autowiz.c
../bin/delobjs: util/delobjs.c conf.h sysdep.h structs.h
	$(CC) $(CFLAGS) -o ../bin/delobjs util/delobjs.c
../bin/listrent: util/listrent.c conf.h sysdep.h structs.h
	$(CC) $(CFLAGS) -o ../bin/listrent util/listrent.c
../bin/mailindex: util/mailindex.c conf.h sysdep.h structs.h utils.h db.h mail.h
	$(CC) $(CFLAGS) -o ../bin/mailindex util/mailindex.c 
../bin/mudpasswd: util/mudpasswd.c conf.h sysdep.h structs.h utils.h
	$(CC) $(CFLAGS) -o ../bin/mudpasswd util/mudpasswd.c 
../bin/play2to3: util/play2to3.c
	$(CC) $(CFLAGS) -o ../bin/play2to3 util/play2to3.c
../bin/plrconv: util/plrconv.c
	$(CC) $(CFLAGS) -o ../bin/plrconv util/plrconv.c
../bin/purgeplay: util/purgeplay.c conf.h sysdep.h structs.h utils.h
	$(CC) $(CFLAGS) -o ../bin/purgeplay util/purgeplay.c
../bin/shopconv: util/shopconv.c conf.h sysdep.h structs.h db.h utils.h shop.h
	$(CC) $(CFLAGS) -o ../bin/shopconv util/shopconv.c
../bin/showplay: util/showplay.c conf.h sysdep.h structs.h
	$(CC) $(CFLAGS) -o ../bin/showplay util/showplay.c
../bin/sign: util/sign.c conf.h sysdep.h
	$(CC) $(CFLAGS) -o ../bin/sign util/sign.c 
../bin/split: util/split.c
	$(CC) $(CFLAGS) -o ../bin/split util/split.c
../bin/wld2html: util/wld2html.c
	$(CC) $(CFLAGS) -o ../bin/wld2html util/wld2html.c

../bin/circle : $(OBJFILES)
	$(CC) -o ../bin/circle $(PROFILE) $(OBJFILES) 
clean:
	rm -f *.o

# Dependencies for the object files (automagically generated with
# gcc -MM)


act.comm.o: act.comm.c conf.h sysdep.h structs.h utils.h comm.h interpreter.h \
  handler.h db.h screen.h
	$(CC) -c $(CFLAGS) act.comm.c
act.create.o: act.create.c conf.h sysdep.h structs.h utils.h comm.h interpreter.h \
  handler.h db.h screen.h
	$(CC) -c $(CFLAGS) act.create.c
act.informative.o: act.informative.c conf.h sysdep.h structs.h utils.h comm.h \
  interpreter.h handler.h db.h spells.h screen.h constants.h
	$(CC) -c $(CFLAGS) act.informative.c
act.item.o: act.item.c conf.h sysdep.h structs.h utils.h comm.h interpreter.h \
  handler.h db.h spells.h
	$(CC) -c $(CFLAGS) act.item.c
act.movement.o: act.movement.c conf.h sysdep.h structs.h utils.h comm.h \
  interpreter.h handler.h db.h spells.h house.h constants.h
	$(CC) -c $(CFLAGS) act.movement.c
act.offensive.o: act.offensive.c conf.h sysdep.h structs.h utils.h comm.h \
  interpreter.h handler.h db.h spells.h
	$(CC) -c $(CFLAGS) act.offensive.c
act.other.o: act.other.c conf.h sysdep.h structs.h utils.h comm.h interpreter.h \
  handler.h db.h spells.h screen.h house.h
	$(CC) -c $(CFLAGS) act.other.c
act.social.o: act.social.c conf.h sysdep.h structs.h utils.h comm.h \
  interpreter.h handler.h db.h spells.h
	$(CC) -c $(CFLAGS) act.social.c
act.wizard.o: act.wizard.c conf.h sysdep.h structs.h utils.h comm.h \
  interpreter.h handler.h db.h spells.h house.h screen.h constants.h
	$(CC) -c $(CFLAGS) act.wizard.c
ban.o: ban.c conf.h sysdep.h structs.h utils.h comm.h interpreter.h handler.h db.h
	$(CC) -c $(CFLAGS) ban.c
boards.o: boards.c conf.h sysdep.h structs.h utils.h comm.h db.h boards.h \
  interpreter.h handler.h
	$(CC) -c $(CFLAGS) boards.c
castle.o: castle.c conf.h sysdep.h structs.h utils.h comm.h interpreter.h \
  handler.h db.h spells.h
	$(CC) -c $(CFLAGS) castle.c
clan.o: clan.c conf.h sysdep.h structs.h utils.h comm.h interpreter.h \
  handler.h db.h screen.h
	$(CC) -c $(CFLAGS) clan.c
class.o: class.c conf.h sysdep.h structs.h db.h utils.h spells.h \
  interpreter.h class.h
	$(CC) -c $(CFLAGS) class.c
comm.o: comm.c conf.h sysdep.h structs.h utils.h comm.h interpreter.h handler.h \
  db.h house.h olc.h
	$(CC) -c $(CFLAGS) comm.c
config.o: config.c conf.h sysdep.h structs.h
	$(CC) -c $(CFLAGS) config.c
constants.o: constants.c conf.h sysdep.h structs.h
	$(CC) -c $(CFLAGS) constants.c
db.o: db.c conf.h sysdep.h structs.h utils.h db.h comm.h handler.h spells.h mail.h \
  interpreter.h house.h
	$(CC) -c $(CFLAGS) db.c
fight.o: fight.c conf.h sysdep.h structs.h utils.h comm.h handler.h interpreter.h \
  db.h spells.h screen.h class.h
	$(CC) -c $(CFLAGS) fight.c
graph.o: graph.c conf.h sysdep.h structs.h utils.h comm.h interpreter.h handler.h \
  db.h spells.h
	$(CC) -c $(CFLAGS) graph.c
handler.o: handler.c conf.h sysdep.h structs.h utils.h comm.h db.h handler.h \
  interpreter.h spells.h
	$(CC) -c $(CFLAGS) handler.c
house.o: house.c conf.h sysdep.h structs.h comm.h handler.h db.h interpreter.h \
  utils.h house.h constants.h
	$(CC) -c $(CFLAGS) house.c
interpreter.o: interpreter.c conf.h sysdep.h structs.h comm.h interpreter.h db.h \
  utils.h spells.h handler.h mail.h screen.h olc.h
	$(CC) -c $(CFLAGS) interpreter.c
limits.o: limits.c conf.h sysdep.h structs.h utils.h spells.h comm.h db.h \
  handler.h
	$(CC) -c $(CFLAGS) limits.c
magic.o: magic.c conf.h sysdep.h structs.h utils.h comm.h spells.h handler.h db.h
	$(CC) -c $(CFLAGS) magic.c
mail.o: mail.c conf.h sysdep.h structs.h utils.h comm.h db.h interpreter.h \
  handler.h mail.h
	$(CC) -c $(CFLAGS) mail.c
mobact.o: mobact.c conf.h sysdep.h structs.h utils.h db.h comm.h interpreter.h \
  handler.h spells.h
	$(CC) -c $(CFLAGS) mobact.c
mobcmd.o: mobcmd.c conf.h sysdep.h structs.h utils.h db.h comm.h interpreter.h \
   handler.h spells.h
	$(CC) -c $(CFLAGS) mobcmd.c
mobprog.o: mobprog.c conf.h sysdep.h structs.h utils.h db.h comm.h interpreter.h \
   handler.h spells.h
	$(CC) -c $(CFLAGS) mobprog.c
modify.o: modify.c conf.h sysdep.h structs.h utils.h interpreter.h handler.h db.h \
  comm.h spells.h mail.h boards.h olc.h
	$(CC) -c $(CFLAGS) modify.c
objsave.o: objsave.c conf.h sysdep.h structs.h comm.h handler.h db.h \
  interpreter.h utils.h spells.h
	$(CC) -c $(CFLAGS) objsave.c
olc.o: olc.c conf.h sysdep.h structs.h utils.h comm.h interpreter.h handler.h db.h \
  olc.h screen.h
	$(CC) -c $(CFLAGS) olc.c
random.o: random.c utils.h
	$(CC) -c $(CFLAGS) random.c
shop.o: shop.c conf.h sysdep.h structs.h comm.h handler.h db.h interpreter.h \
  utils.h shop.h
	$(CC) -c $(CFLAGS) shop.c
spec_assign.o: spec_assign.c conf.h sysdep.h structs.h db.h interpreter.h \
  utils.h
	$(CC) -c $(CFLAGS) spec_assign.c
spec_grave.o: spec_grave.c conf.h sysdep.h structs.h utils.h comm.h \
  interpreter.h handler.h db.h spells.h
	$(CC) -c $(CFLAGS) spec_grave.c
spec_procs.o: spec_procs.c conf.h sysdep.h structs.h utils.h comm.h \
  interpreter.h handler.h db.h spells.h
	$(CC) -c $(CFLAGS) spec_procs.c
spell_parser.o: spell_parser.c conf.h sysdep.h structs.h utils.h interpreter.h \
  spells.h handler.h comm.h db.h
	$(CC) -c $(CFLAGS) spell_parser.c
spells.o: spells.c conf.h sysdep.h structs.h utils.h comm.h spells.h handler.h \
  db.h constants.h
	$(CC) -c $(CFLAGS) spells.c
teleport.o: teleport.c conf.h sysdep.h structs.h utils.h interpreter.h \
  comm.h teleport.h handler.h
	$(CC) -c $(CFLAGS) teleport.c
trains.o: trains.c structs.h comm.h utils.h interpreter.h handler.h db.h
	$(CC) -c $(CFALGS) trains.c
utils.o: utils.c conf.h sysdep.h structs.h utils.h comm.h screen.h spells.h \
  handler.h db.h
	$(CC) -c $(CFLAGS) utils.c
weather.o: weather.c conf.h sysdep.h structs.h utils.h comm.h handler.h \
  interpreter.h db.h
	$(CC) -c $(CFLAGS) weather.c
wizlist.o: wizlist.c conf.h sysdep.h structs.h utils.h comm.h interpreter.h \
  handler.h db.h screen.h
	$(CC) -c $(CFLAGS) wizlist.c
redit.o: redit.c conf.h sysdep.h structs.h utils.h comm.h boards.h \
  db.h olc.h
	$(CC) -c $(CFLAGS) redit.c
oedit.o: oedit.c conf.h sysdep.h structs.h utils.h comm.h boards.h spells.h \
  db.h olc.h shop.h
	$(CC) -c $(CFLAGS) oedit.c
zedit.o: zedit.c conf.h sysdep.h structs.h utils.h comm.h db.h olc.h
	$(CC) -c $(CFLAGS) zedit.c 
medit.o: medit.c conf.h sysdep.h structs.h utils.h comm.h spells.h shop.h \
  db.h olc.h handler.h
	$(CC) -c $(CFLAGS) medit.c 
sedit.o: sedit.c conf.h sysdep.h structs.h utils.h comm.h db.h olc.h shop.h
	$(CC) -c $(CFLAGS) sedit.c 
guild.o: guild.c conf.h sysdep.h interpreter.h comm.h structs.h handler.h \
  db.h utils.h spells.h guild.h
	$(CC) -c $(CFLAGS) guild.c 
gedit.o: gedit.c conf.h sysdep.h interpreter.h comm.h structs.h utils.h \
  db.h spells.h guild.h olc.h
	$(CC) -c $(CFLAGS) gedit.c 
prgrun.o: prgrun.c sysdep.h structs.h utils.h comm.h interpreter.h db.h
	$(CC) -c $(CFLAGS) prgrun.c